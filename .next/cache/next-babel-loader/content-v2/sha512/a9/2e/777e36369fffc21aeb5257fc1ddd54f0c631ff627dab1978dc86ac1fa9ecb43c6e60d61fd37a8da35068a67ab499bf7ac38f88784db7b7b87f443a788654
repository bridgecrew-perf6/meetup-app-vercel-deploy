{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\alarovoi\\\\Desktop\\\\projects\\\\udemy-react-course\\\\next-js-bigger\\\\pages\\\\meetups\\\\index.js\";\nimport React from 'react';\nimport MeetupList from \"../../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'First meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some addres, 12312 Some City',\n  description: 'This iS the first meetup'\n}, {\n  id: 'm2',\n  title: 'Second meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some addres, 12dasda312 Some City',\n  description: 'This iS the second meetup'\n}, {\n  id: 'm3',\n  title: 'Third meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n  address: 'Some addres, 12sdasdxdsasd312312 Some City',\n  description: 'This iS the third meetup'\n}];\n\nconst Meetups = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\nexport const getStaticProps = async () => {\n  // prerender this page on server and fetching data to it\n  // some logic\n  const client = await MongoClient.connect('mongodb+srv://mthrfckr:0YRCwLmXQkFAygzH@cluster0.l1nje.mongodb.net/meetups?retryWrites=true&w=majority');\n  const collection = client.db(\"meetups\").collection(\"meetups\");\n  const meetups = await collection.find().toArray();\n  await client.close();\n  return {\n    props: {\n      meetups: meetups.map(m => ({\n        title: m.title,\n        address: m.address,\n        image: m.image,\n        description: m.description\n      }))\n    },\n    revalidate: 1 //seconds to re pre render from next\n\n  };\n}; // export const getServerSideProps = async (context) => { // the difference is that this one not runs on build, but always runs after deployment\n//     //any logic will run on server\n//\n//     const req = context.req // we use this function is we need these(req, res) and if we need it to be regenerated on every request\n//     const res = context.res\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     }\n// }\n\nexport default Meetups;","map":{"version":3,"sources":["C:/Users/alarovoi/Desktop/projects/udemy-react-course/next-js-bigger/pages/meetups/index.js"],"names":["React","MeetupList","MongoClient","DUMMY_MEETUPS","id","title","image","address","description","Meetups","props","meetups","getStaticProps","client","connect","collection","db","find","toArray","close","map","m","revalidate"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,SAAQC,WAAR,QAA0B,SAA1B;AAGA,MAAMC,aAAa,GAAG,CAClB;AACIC,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,cAFX;AAGIC,EAAAA,KAAK,EAAE,wHAHX;AAIIC,EAAAA,OAAO,EAAE,8BAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CADkB,EAQlB;AACIJ,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,eAFX;AAGIC,EAAAA,KAAK,EAAE,wHAHX;AAIIC,EAAAA,OAAO,EAAE,mCAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CARkB,EAelB;AACIJ,EAAAA,EAAE,EAAE,IADR;AAEIC,EAAAA,KAAK,EAAE,cAFX;AAGIC,EAAAA,KAAK,EAAE,wHAHX;AAIIC,EAAAA,OAAO,EAAE,4CAJb;AAKIC,EAAAA,WAAW,EAAE;AALjB,CAfkB,CAAtB;;AAyBA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAEvB,sBACI;AAAA,2BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAKH,CAPD;;AASA,OAAO,MAAMC,cAAc,GAAG,YAAY;AAAE;AACxC;AAEA,QAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CAAoB,wGAApB,CAArB;AAEA,QAAMC,UAAU,GAAGF,MAAM,CAACG,EAAP,CAAU,SAAV,EAAqBD,UAArB,CAAgC,SAAhC,CAAnB;AAEA,QAAMJ,OAAO,GAAG,MAAMI,UAAU,CAACE,IAAX,GAAkBC,OAAlB,EAAtB;AAEA,QAAML,MAAM,CAACM,KAAP,EAAN;AAEA,SAAO;AACHT,IAAAA,KAAK,EAAE;AACHC,MAAAA,OAAO,EAAEA,OAAO,CAACS,GAAR,CAAYC,CAAC,KAAK;AACvBhB,QAAAA,KAAK,EAAEgB,CAAC,CAAChB,KADc;AAEvBE,QAAAA,OAAO,EAAEc,CAAC,CAACd,OAFY;AAGvBD,QAAAA,KAAK,EAAEe,CAAC,CAACf,KAHc;AAIvBE,QAAAA,WAAW,EAAEa,CAAC,CAACb;AAJQ,OAAL,CAAb;AADN,KADJ;AASHc,IAAAA,UAAU,EAAE,CATT,CASY;;AATZ,GAAP;AAWH,CAtBM,C,CAwBP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeb,OAAf","sourcesContent":["import React from 'react';\r\nimport MeetupList from \"../../components/meetups/MeetupList\";\r\n\r\nimport {MongoClient} from \"mongodb\";\r\n\r\n\r\nconst DUMMY_MEETUPS = [\r\n    {\r\n        id: 'm1',\r\n        title: 'First meetup',\r\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n        address: 'Some addres, 12312 Some City',\r\n        description: 'This iS the first meetup'\r\n    },\r\n    {\r\n        id: 'm2',\r\n        title: 'Second meetup',\r\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n        address: 'Some addres, 12dasda312 Some City',\r\n        description: 'This iS the second meetup'\r\n    },\r\n    {\r\n        id: 'm3',\r\n        title: 'Third meetup',\r\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n        address: 'Some addres, 12sdasdxdsasd312312 Some City',\r\n        description: 'This iS the third meetup'\r\n    },\r\n\r\n]\r\n\r\nconst Meetups = (props) => {\r\n\r\n    return (\r\n        <>\r\n            <MeetupList meetups={props.meetups} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport const getStaticProps = async () => { // prerender this page on server and fetching data to it\r\n    // some logic\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://mthrfckr:0YRCwLmXQkFAygzH@cluster0.l1nje.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n    const collection = client.db(\"meetups\").collection(\"meetups\");\r\n\r\n    const meetups = await collection.find().toArray()\r\n\r\n    await client.close()\r\n\r\n    return {\r\n        props: {\r\n            meetups: meetups.map(m => ({\r\n                title: m.title,\r\n                address: m.address,\r\n                image: m.image,\r\n                description: m.description\r\n            }))\r\n        },\r\n        revalidate: 1  //seconds to re pre render from next\r\n    }\r\n}\r\n\r\n// export const getServerSideProps = async (context) => { // the difference is that this one not runs on build, but always runs after deployment\r\n//     //any logic will run on server\r\n//\r\n//     const req = context.req // we use this function is we need these(req, res) and if we need it to be regenerated on every request\r\n//     const res = context.res\r\n//\r\n//     return {\r\n//         props: {\r\n//             meetups: DUMMY_MEETUPS\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport default Meetups;\r\n"]},"metadata":{},"sourceType":"module"}