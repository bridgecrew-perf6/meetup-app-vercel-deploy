{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport MeetupDetail from \"../../../components/meetups/MeetupDetail\";\nimport connectToDatabase from \"../../../helpers/meetupsConnect\";\nimport { ObjectId } from \"mongodb\";\nimport Head from \"next/head\";\n\nconst SingleMeetup = props => {\n  const {\n    meetupId,\n    image,\n    title,\n    address,\n    description\n  } = props.meetupData;\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: title\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"Check some meetups, BITCH\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupDetail, {\n      meetupId: meetupId,\n      imageUrl: image,\n      title: title,\n      address: address,\n      description: description\n    })]\n  });\n};\n\nexport const getStaticPaths = async () => {\n  const client = await connectToDatabase();\n  const collection = client.db('meetups').collection('meetups');\n  const meetups = await collection.find({}, {\n    _id: 1\n  }).toArray();\n  await client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(m => ({\n      params: {\n        meetupId: m._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async ctx => {\n  const meetupId = ctx.params.meetupId;\n  const client = await connectToDatabase();\n  const collection = client.db(\"meetups\").collection(\"meetups\");\n  const meetup = await collection.findOne({\n    _id: ObjectId(meetupId)\n  });\n  console.log(meetup);\n  await client.close();\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: meetup.image,\n        title: meetup.title,\n        address: meetup.address,\n        description: meetup.description\n      }\n    }\n  };\n};\nexport default SingleMeetup;","map":null,"metadata":{},"sourceType":"module"}