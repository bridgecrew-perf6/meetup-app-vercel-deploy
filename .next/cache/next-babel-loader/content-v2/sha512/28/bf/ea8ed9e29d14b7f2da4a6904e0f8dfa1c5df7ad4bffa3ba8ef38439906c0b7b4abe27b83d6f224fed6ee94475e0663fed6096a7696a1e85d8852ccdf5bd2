{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport MeetupList from \"../../components/meetups/MeetupList\";\nimport Head from \"next/head\";\n\nvar Meetups = function Meetups(props) {\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsxs(Head, {\n      children: [/*#__PURE__*/_jsx(\"title\", {\n        children: \"List all meetups\"\n      }), /*#__PURE__*/_jsx(\"meta\", {\n        name: \"description\",\n        content: \"List some meetups, BITCH\"\n      })]\n    }), /*#__PURE__*/_jsx(MeetupList, {\n      meetups: props.meetups\n    })]\n  });\n};\n\n// export const getServerSideProps = async (context) => { // the difference is that this one not runs on build, but always runs after deployment\n//     //any logic will run on server\n//\n//     const req = context.req // we use this function is we need these(req, res) and if we need it to be regenerated on every request\n//     const res = context.res\n//\n//     return {\n//         props: {\n//             meetups: DUMMY_MEETUPS\n//         }\n//     }\n// }\nexport var __N_SSG = true;\nexport default Meetups;","map":null,"metadata":{},"sourceType":"module"}