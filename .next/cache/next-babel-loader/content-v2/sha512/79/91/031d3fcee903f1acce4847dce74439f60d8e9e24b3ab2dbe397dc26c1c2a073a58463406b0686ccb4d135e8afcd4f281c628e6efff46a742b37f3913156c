{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\alarovoi\\\\Desktop\\\\projects\\\\udemy-react-course\\\\next-js-bigger\\\\pages\\\\meetups\\\\[meetupId]\\\\index.js\",\n    _this = this;\n\nimport MeetupDetail from \"../../../components/meetups/MeetupDetail\";\n\nvar SingleMeetup = function SingleMeetup(props) {\n  var _props$meetupData = props.meetupData,\n      meetupId = _props$meetupData.meetupId,\n      image = _props$meetupData.image,\n      title = _props$meetupData.title,\n      address = _props$meetupData.address,\n      description = _props$meetupData.description;\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    meetupId: meetupId,\n    imageUrl: image,\n    title: title,\n    address: address,\n    description: description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, _this);\n};\n\n_c = SingleMeetup;\nexport var __N_SSG = true;\nexport default SingleMeetup;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleMeetup\");","map":{"version":3,"sources":["C:/Users/alarovoi/Desktop/projects/udemy-react-course/next-js-bigger/pages/meetups/[meetupId]/index.js"],"names":["MeetupDetail","SingleMeetup","props","meetupData","meetupId","image","title","address","description"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,0CAAzB;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAAA,0BAC2BA,KAAK,CAACC,UADjC;AAAA,MACrBC,QADqB,qBACrBA,QADqB;AAAA,MACXC,KADW,qBACXA,KADW;AAAA,MACJC,KADI,qBACJA,KADI;AAAA,MACGC,OADH,qBACGA,OADH;AAAA,MACYC,WADZ,qBACYA,WADZ;AAG5B,sBACI,QAAC,YAAD;AACI,IAAA,QAAQ,EAAEJ,QADd;AAEI,IAAA,QAAQ,EAAEC,KAFd;AAGI,IAAA,KAAK,EAAEC,KAHX;AAII,IAAA,OAAO,EAAEC,OAJb;AAKI,IAAA,WAAW,EAAEC;AALjB;AAAA;AAAA;AAAA;AAAA,WADJ;AASH,CAZD;;KAAMP,Y;;AA2DN,eAAeA,YAAf","sourcesContent":["import MeetupDetail from \"../../../components/meetups/MeetupDetail\";\r\nimport {MongoClient, ObjectId} from \"mongodb\";\r\n\r\nconst SingleMeetup = (props) => {\r\n    const {meetupId, image, title, address, description} = props.meetupData\r\n\r\n    return (\r\n        <MeetupDetail\r\n            meetupId={meetupId}\r\n            imageUrl={image}\r\n            title={title}\r\n            address={address}\r\n            description={description}\r\n        />\r\n    );\r\n};\r\n\r\nexport const getStaticPaths = async () => {\r\n    const client = await MongoClient.connect('mongodb+srv://mthrfckr:0YRCwLmXQkFAygzH@cluster0.l1nje.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n    const collection = client.db(\"meetups\").collection(\"meetups\");\r\n\r\n    const meetups = await collection.find({}, {_id: 1}).toArray()\r\n\r\n    await client.close()\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(m => ({\r\n            params: {\r\n                meetupId: m._id.toString()\r\n            }\r\n        }))\r\n    }\r\n}\r\n\r\nexport const getStaticProps = async (ctx) => {\r\n    const meetupId = ctx.params.meetupId\r\n\r\n    const client = await MongoClient.connect('mongodb+srv://mthrfckr:0YRCwLmXQkFAygzH@cluster0.l1nje.mongodb.net/meetups?retryWrites=true&w=majority')\r\n\r\n    const collection = client.db(\"meetups\").collection(\"meetups\");\r\n\r\n    const meetup = await collection.findOne({_id: ObjectId(meetupId)})\r\n    console.log(meetup)\r\n\r\n    await client.close()\r\n\r\n    return {\r\n        props: {\r\n            meetupData: {\r\n                id: meetupId,\r\n                image: meetup.title,\r\n                title: meetup.image,\r\n                address: meetup.address,\r\n                description: meetup.description\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default SingleMeetup;\r\n"]},"metadata":{},"sourceType":"module"}